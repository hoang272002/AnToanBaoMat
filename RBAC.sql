-- TAO ROLE
CREATE ROLE NHANVIEN;
CREATE ROLE NVQUANLY;
CREATE ROLE NVTRUONGPHONG;
CREATE ROLE NVTAICHINH;
CREATE ROLE NVNHANSU;
CREATE ROLE NVTRDA;
GRANT EXECUTE ON DBMS_RLS TO SCHEMA_USER;
/
-- TAO MOT TAI KHOAN SCHEMA_USER DE TAO VIEW SU DUNG VPD

/
/* 
                BANG NHANVIEN          
*/
-- TAO MOT VIEW BANG NHAN VIEN TREN SCHEMA CUA SCHEMA_USER <NVNHANSU, TRUONGPHONG, QUANLY, TRUONGDEAN, NHANVIEN>
CREATE OR REPLACE VIEW SCHEMA_USER.V_NHANVIEN AS
SELECT MANV, TENNV, PHAI, NGAYSINH, DIACHI, SODT, 
DECODE(SYS_CONTEXT('USERENV', 'SESSION_USER'), MANV , LUONG, NULL) AS LUONG, DECODE(SYS_CONTEXT('USERENV', 'SESSION_USER'), MANV , PHUCAP, NULL) AS PHUCAP, 
VAITRO, QUANLY, PHONGBAN
FROM SCHEMA_USER.NHANVIEN;

-- TAO MOT VIEW KHAC DE NHAN VIEN CO THE CAP NHAT 
CREATE OR REPLACE VIEW SCHEMA_USER.V_NHANVIEN_W AS
SELECT NGAYSINH, DIACHI, SODT 
FROM SCHEMA_USER.NHANVIEN
WHERE MANV = SYS_CONTEXT('USERENV', 'SESSION_USER');
/


---VPD
CREATE OR REPLACE FUNCTION SCHEMA_USER.NHANVIEN_ACCESS_POLICY (
       schema_name VARCHAR2,
       table_name  VARCHAR2
    )
    RETURN VARCHAR2
    AS
        v_loaiNhanVien CHAR(4);
        v_maNhanVien CHAR(4);
        v_phongban CHAR(4);
    BEGIN
        
        begin
            select VAITRO INTO v_loaiNhanVien FROM SCHEMA_USER.NHANVIEN WHERE MANV = sys_context('userenv', 'session_user');
        exception 
            WHEN NO_DATA_FOUND THEN
            RETURN '1=2';
        end;
    
        if(v_loaiNhanVien = 'NV' OR v_loaiNhanVien = 'NS' OR v_loaiNhanVien = 'TRDA') then 
            v_maNhanVien := sys_context('userenv', 'session_user');
            return 'MANV = '||'''' ||v_maNhanVien||'''';            
        elsif(v_loaiNhanVien= 'QL') then
             v_maNhanVien := sys_context('userenv', 'session_user');
            return 'MANV = '||'''' ||v_maNhanVien||''''|| ' OR QUANLY = '||'''' ||v_maNhanVien||'''';
        elsif(v_loaiNhanVien= 'TRPG') then
            select PHONGBAN INTO v_phongban from SCHEMA_USER.NHANVIEN where MANV = SYS_CONTEXT('USERENV', 'SESSION_USER');
            return 'PHONGBAN = '||'''' ||v_phongban||'''';
        else 
            return '1=2';
        end if;
    END;
/
-- THEM NHANVIEN POLICY VAO VIEW
BEGIN
   DBMS_RLS.ADD_POLICY(
      object_schema   => 'SCHEMA_USER',
      object_name     => 'V_NHANVIEN',
      policy_name     => 'NHANVIEN_POLICY',
      function_schema => 'SCHEMA_USER',
      policy_function => 'NHANVIEN_ACCESS_POLICY',
      statement_types => 'SELECT, INSERT',
      update_check => true
   );
END;



/    
--- TAO VIEW CHO <NHAN VIEN TAI CHINH>
CREATE OR REPLACE VIEW SCHEMA_USER.V_NHANVIEN_TC AS
SELECT MANV, TENNV, PHAI, NGAYSINH, DIACHI, SODT, LUONG, PHUCAP, VAITRO, QUANLY, PHONGBAN
FROM SCHEMA_USER.NHANVIEN;

/


--- CAP QUYEN SELECT CHO ROLE 
GRANT SELECT ON SCHEMA_USER.V_NHANVIEN TO NHANVIEN, NVQUANLY, NVTRUONGPHONG, NVNHANSU, NVTRDA;
GRANT SELECT ON SCHEMA_USER.V_NHANVIEN_TC TO NVTAICHINH;
/
-- CAP QUYEN GHI 
GRANT UPDATE(LUONG, PHUCAP) ON SCHEMA_USER.V_NHANVIEN_TC TO NVTAICHINH; 
GRANT INSERT, UPDATE(MANV, TENNV, PHAI, NGAYSINH, DIACHI, SODT, VAITRO, QUANLY, PHONGBAN) ON SCHEMA_USER.V_NHANVIEN TO NVNHANSU;
GRANT UPDATE(NGAYSINH, DIACHI, SODT) ON SCHEMA_USER.V_NHANVIEN_W TO NHANVIEN;

/
/*      PHAN CONG      */
-- TAO VIEW BANG PHAN CONG CHO CAC NHANVIEN <NHANVIEN, NVQUANLY, NVTRUONGPHONG>
CREATE OR REPLACE VIEW SCHEMA_USER.V_PHANCONG AS
SELECT MANV, MADA,THOIGIAN, QUANLY, PHONGBAN
FROM SCHEMA_USER.PHANCONG
/

-- TAO VPD TREN VIEW SCHEMA_USER.V_PHANCONG <THUC RA DUNG POLICY O BANG NHANVIEN CUNG DUOC NHUNG VI TINH MO RONG SAU NAY NEN SE TACH RIENG RA>
CREATE OR REPLACE FUNCTION SCHEMA_USER.PHANCONG_ACCESS_POLICY (
       schema_name VARCHAR2,
       table_name  VARCHAR2
    )
    RETURN VARCHAR2
    AS
        v_loaiNhanVien char(4);
        v_maNhanVien char(4);
        v_phongban char(4);
    BEGIN
        
        begin
            select VAITRO INTO v_loaiNhanVien FROM SCHEMA_USER.V_NHANVIEN WHERE MANV = sys_context('userenv', 'session_user');
        exception 
            WHEN NO_DATA_FOUND THEN
            RETURN '1=2';
        end;
    
        if(v_loaiNhanVien = 'NV' OR v_loaiNhanVien = 'NS' OR v_loaiNhanVien = 'TRDA') then 
            v_maNhanVien := sys_context('userenv', 'session_user');
            return 'MANV = '||'''' ||v_maNhanVien||'''';
            
       elsif(v_loaiNhanVien= 'QL') then
            v_maNhanVien := sys_context('userenv', 'session_user');
            return 'MANV = '||'''' ||v_maNhanVien||'''' || ' OR QUANLY = '||'''' ||v_maNhanVien||'''';
        elsif(v_loaiNhanVien= 'TRPG') then
            select PHONGBAN INTO v_phongban from SCHEMA_USER.V_PHANCONG where MANV = SYS_CONTEXT('USERENV', 'SESSION_USER');
            return 'PHONGBAN = '||'''' ||v_phongban||'''';
        else 
            return '1=2';
        end if;
    END;
/
--- THEM POLICY VAO V_PHANCONG
BEGIN
   DBMS_RLS.ADD_POLICY(
      object_schema   => 'SCHEMA_USER',
      object_name     => 'V_PHANCONG',
      policy_name     => 'PHANCONG_POLICY',
      function_schema => 'SCHEMA_USER',
      policy_function => 'PHANCONG_ACCESS_POLICY',
      statement_types => 'INSERT, SELECT, UPDATE, DELETE',
      update_check => TRUE
   );
END;
/

-- TAO VIEW PHAN CONG CHO NHANVIEN TAI CHINH
CREATE OR REPLACE VIEW SCHEMA_USER.V_PHANCONG_TC AS
SELECT MANV, MADA,THOIGIAN, QUANLY, PHONGBAN
FROM SCHEMA_USER.PHANCONG;
/
-- CAP NHAT QUYEN DOC CHO VIEW PHAN CONG
GRANT SELECT ON SCHEMA_USER.V_PHANCONG TO NHANVIEN, NVQUANLY, NVTRUONGPHONG, NVNHANSU, NVTRDA;
GRANT SELECT ON SCHEMA_USER.V_PHANCONG_TC TO NVTAICHINH;
GRANT UPDATE, INSERT (MANV, MADA, THOIGIAN, QUANLY, PHONGBAN) ON SCHEMA_USER.V_PHANCONG TO NVTRUONGPHONG;
GRANT DELETE ON SCHEMA_USER.V_PHANCONG TO NVTRUONGPHONG;
/

/*  BANG  PHONGBAN */
--TAO VIEW CHO QUAN HE PHONGBAN CHO TAT CA NHAN VIEN 
CREATE OR REPLACE VIEW SCHEMA_USER.V_PHONGBAN AS
SELECT MAPB, TENPB, TRUONGPHONG
FROM SCHEMA_USER.PHONGBAN;
/
---PHAN QUYEN SELECT TREN V_PHONGBAN
GRANT SELECT ON SCHEMA_USER.V_PHONGBAN TO NHANVIEN, NVQUANLY, NVTRUONGPHONG, NVNHANSU, NVTAICHINH, NVTRDA;
GRANT INSERT,UPDATE(MAPB, TENPB, TRUONGPHONG) ON SCHEMA_USER.V_PHONGBAN TO NVNHANSU;


/
/* BANG DEAN */

/
--TAO VIEW CHO QUAN HE DEAN CHO TAT CA NHAN VIEN 
CREATE OR REPLACE VIEW SCHEMA_USER.V_DEAN AS
SELECT MADA, TENDA, NGAYBD, PHONGBAN, TRUONGDA
FROM SCHEMA_USER.DEAN;

/
---PHAN QUYEN SELECT TREN V_PHONGBAN
GRANT SELECT ON SCHEMA_USER.V_PHONGBAN TO NHANVIEN, NVQUANLY, NVTRUONGPHONG, NVNHANSU, NVTAICHINH, NVTRDA;
GRANT DELETE ON SCHEMA_USER.DEAN TO NVTRDA;
GRANT UPDATE, INSERT(MADA, TENDA, NGAYBD, PHONGBAN, TRUONGDA) ON SCHEMA_USER.V_DEAN  TO NVTRDA; 
/
--- TAO TAI KHOAN VA CAP QUYEN DANG NHAP CHO USER
alter session set "_ORACLE_SCRIPT"=true;
/
CREATE OR REPLACE PROCEDURE create_users_and_grant_access
AS
    CURSOR c_nhanvien IS SELECT * FROM SCHEMA_USER.NHANVIEN;
    v_username c_nhanvien%rowtype;
BEGIN
    OPEN c_nhanvien;
    LOOP
        FETCH c_nhanvien INTO v_username; 
        EXIT WHEN c_nhanvien%NOTFOUND;
        EXECUTE IMMEDIATE 'CREATE USER ' || v_username.MaNV  || ' IDENTIFIED BY 1234';
        EXECUTE IMMEDIATE 'GRANT CREATE SESSION TO ' || v_username.MaNV  ;
    END LOOP;
    CLOSE c_nhanvien;
END;
/
EXEC create_users_and_grant_access;
/

---- GAN ROLE CHO NGUOI DUNG
CREATE OR REPLACE PROCEDURE ASSIGN_ROLES IS
  CURSOR c_nhanvien IS SELECT MANV, vaitro FROM SCHEMA_USER.NHANVIEN;
  v_role VARCHAR2(30);
BEGIN
  FOR NV IN c_nhanvien LOOP
    CASE NV.vaitro
      WHEN 'NV' THEN v_role := 'NHANVIEN';
      WHEN 'QL' THEN v_role := 'NVQUANLY';
      WHEN 'TRPG' THEN v_role := 'NVTRUONGPHONG';
      WHEN 'TRDA' THEN v_role := 'NVTRDA';
      WHEN 'NS' THEN v_role := 'NVNHANSU';
      WHEN 'TC' THEN v_role := 'NVTAICHINH';
      ELSE v_role := NULL;
    END CASE;
    IF v_role IS NOT NULL THEN
      EXECUTE IMMEDIATE 'GRANT '  || v_role || ' TO ' || '"' || NV.MANV || '"';
    END IF;
  END LOOP;
END;
/
EXEC ASSIGN_ROLES;

---------TAO VIEW GIA LAP 
CREATE OR REPLACE VIEW SCHEMA_USER.V_ALL_NHANVIEN AS
SELECT * FROM SCHEMA_USER.NHANVIEN;

CREATE OR REPLACE VIEW SCHEMA_USER.V_ALL_PHONGBAN AS
SELECT * FROM SCHEMA_USER.PHONGBAN;

CREATE OR REPLACE VIEW SCHEMA_USER.V_ALL_DEAN AS
SELECT * FROM SCHEMA_USER.DEAN;

CREATE OR REPLACE VIEW SCHEMA_USER.V_ALL_PHANCONG AS
SELECT * FROM SCHEMA_USER.PHANCONG;

CREATE OR REPLACE VIEW SCHEMA_USER.V_ALL_TAIKHOAN AS
SELECT * FROM SCHEMA_USER.DEAN;